ã
^D:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\Controllers\UserController.cs
	namespace 	
IPS_Backend
 
. 
Controllers !
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
UserController 
:  !
ControllerBase" 0
{ 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str #
)# $
]$ %
public 
IActionResult 
CheckCommunication /
(/ 0
)0 1
{ 	
return 
Content 
( 
$str =
,= >
$str? Q
)Q R
;R S
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 1
)1 2
]2 3
public 
IActionResult 

CreateUser '
(' (
string( .
userName/ 7
,7 8
string9 ?
userPass@ H
)H I
{ 	
DAL 
. 
UserDAL 
userDAL 
=  !
new" %
DAL& )
.) *
UserDAL* 1
(1 2
)2 3
;3 4
userDAL 
. 

CreateUser 
( 
userName '
,' (
userPass) 1
)1 2
;2 3
return 
Ok 
( 
) 
; 
} 	
[   	
HttpPost  	 
]   
[!! 	
Route!!	 
(!! 
$str!! %
)!!% &
]!!& '
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
SendText"") 1
(""1 2
string""2 8
	textInput""9 B
)""B C
{## 	
var$$ 
client$$ 
=$$ 
new$$ 

HttpClient$$ '
($$' (
)$$( )
;$$) *
var%% 
request%% 
=%% 
new%% 
HttpRequestMessage%% 0
(%%0 1
)%%1 2
{&& 

RequestUri'' 
='' 
new''  
Uri''! $
(''$ %
$str''% W
+''W X
	textInput''X a
)''a b
,''b c
Method(( 
=(( 

HttpMethod(( #
.((# $
Post(($ (
,((( )
Content)) 
=)) 
new)) 
StringContent)) +
())+ ,
	textInput)), 5
)))5 6
}** 
;** 
var++ 
response++ 
=++ 
await++  
client++! '
.++' (
	SendAsync++( 1
(++1 2
request++2 9
)++9 :
;++: ;
return-- 
Ok-- 
(-- 
response-- 
)-- 
;--  
}.. 	
}// 
}00 Í
OD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\DAL\UserDAL.cs
	namespace 	
IPS_Backend
 
. 
DAL 
{ 
public		 

class		 
UserDAL		 
{

 
public 
List 
< 

DataModels 
. 
User #
># $
GetUsers% -
(- .
). /
{ 	
using 
Context 
	myContext #
=$ %
new& )
Context* 1
(1 2
)2 3
;3 4
var 
Users 
= 
	myContext !
. 
Users 
. 
ToList 
( 
) 
; 
return 
Users 
; 
} 	
public 
void 

CreateUser 
( 
string %
	_userName& /
,/ 0
string1 7
	_userPass8 A
)A B
{ 	
using 
Context 
	myContext #
=$ %
new& )
Context* 1
(1 2
)2 3
;3 4
	myContext 
. 
Users 
. 
Add 
(  
new  #
User$ (
(( )
)) *
{ 
userName 
= 
	_userName $
,$ %
userPass 
= 
	_userPass $
} 
) 
; 
	myContext 
. 
SaveChanges !
(! "
)" #
;# $
} 	
} 
}   Š

VD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\DataModels\Context.cs
	namespace 	
IPS_Backend
 
. 

DataModels  
{ 
public		 

class		 
Context		 
:		 
	DbContext		 $
{

 
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
	Inventory 
> 
Inventories  +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
DbSet 
< 
Item 
> 
Items  
{! "
get# &
;& '
set( +
;+ ,
}- .
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. 
UseSqlServer '
(' (
$str	( ™
)
™ š
;
š ›
} 	
} 
} ˆ
XD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\DataModels\Inventory.cs
	namespace 	
IPS_Backend
 
. 

DataModels  
{ 
public 

class 
	Inventory 
{		 
public

 
int

 
inventoryID

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
List 
< 
Item 
> 
items 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} Ž
SD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\DataModels\Item.cs
	namespace 	
IPS_Backend
 
. 

DataModels  
{ 
public 

class 
Item 
{		 
public

 
int

 
itemID

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
string 
itemName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
itemDescription %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
	itemStats 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ¼
SD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\DataModels\User.cs
	namespace 	
IPS_Backend
 
. 

DataModels  
{		 
public

 

class

 
User

 
{ 
public 
int 
userID 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
userName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
userPass 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
List 
< 
	Inventory 
> 
inventories *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
} 
} Ð@
eD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\Migrations\20220922105353_Initial.cs
	namespace 	
IPS_Backend
 
. 

Migrations  
{ 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 
,

 
columns 
: 
table 
=> !
new" %
{ 
userID 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
userName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
userPass 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
userID8 >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
inventoryID 
=  !
table" '
.' (
Column( .
<. /
int/ 2
>2 3
(3 4
type4 8
:8 9
$str: ?
,? @
nullableA I
:I J
falseK P
)P Q
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
userID 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
trueF J
)J K
} 
, 
constraints 
: 
table "
=># %
{   
table!! 
.!! 

PrimaryKey!! $
(!!$ %
$str!!% 5
,!!5 6
x!!7 8
=>!!9 ;
x!!< =
.!!= >
inventoryID!!> I
)!!I J
;!!J K
table"" 
."" 

ForeignKey"" $
(""$ %
name## 
:## 
$str## ;
,##; <
column$$ 
:$$ 
x$$  !
=>$$" $
x$$% &
.$$& '
userID$$' -
,$$- .
principalTable%% &
:%%& '
$str%%( /
,%%/ 0
principalColumn&& '
:&&' (
$str&&) 1
,&&1 2
onDelete''  
:''  !
ReferentialAction''" 3
.''3 4
Restrict''4 <
)''< =
;''= >
}(( 
)(( 
;(( 
migrationBuilder** 
.** 
CreateTable** (
(**( )
name++ 
:++ 
$str++ 
,++ 
columns,, 
:,, 
table,, 
=>,, !
new,," %
{-- 
itemID.. 
=.. 
table.. "
..." #
Column..# )
<..) *
int..* -
>..- .
(... /
type../ 3
:..3 4
$str..5 :
,..: ;
nullable..< D
:..D E
false..F K
)..K L
.// 

Annotation// #
(//# $
$str//$ 8
,//8 9
$str//: @
)//@ A
,//A B
itemName00 
=00 
table00 $
.00$ %
Column00% +
<00+ ,
string00, 2
>002 3
(003 4
type004 8
:008 9
$str00: I
,00I J
nullable00K S
:00S T
true00U Y
)00Y Z
,00Z [
itemDescription11 #
=11$ %
table11& +
.11+ ,
Column11, 2
<112 3
string113 9
>119 :
(11: ;
type11; ?
:11? @
$str11A P
,11P Q
nullable11R Z
:11Z [
true11\ `
)11` a
,11a b
	itemStats22 
=22 
table22  %
.22% &
Column22& ,
<22, -
string22- 3
>223 4
(224 5
type225 9
:229 :
$str22; J
,22J K
nullable22L T
:22T U
true22V Z
)22Z [
,22[ \
inventoryID33 
=33  !
table33" '
.33' (
Column33( .
<33. /
int33/ 2
>332 3
(333 4
type334 8
:338 9
$str33: ?
,33? @
nullable33A I
:33I J
true33K O
)33O P
}44 
,44 
constraints55 
:55 
table55 "
=>55# %
{66 
table77 
.77 

PrimaryKey77 $
(77$ %
$str77% /
,77/ 0
x771 2
=>773 5
x776 7
.777 8
itemID778 >
)77> ?
;77? @
table88 
.88 

ForeignKey88 $
(88$ %
name99 
:99 
$str99 @
,99@ A
column:: 
::: 
x::  !
=>::" $
x::% &
.::& '
inventoryID::' 2
,::2 3
principalTable;; &
:;;& '
$str;;( 5
,;;5 6
principalColumn<< '
:<<' (
$str<<) 6
,<<6 7
onDelete==  
:==  !
ReferentialAction==" 3
.==3 4
Restrict==4 <
)==< =
;=== >
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateIndex@@ (
(@@( )
nameAA 
:AA 
$strAA -
,AA- .
tableBB 
:BB 
$strBB $
,BB$ %
columnCC 
:CC 
$strCC  
)CC  !
;CC! "
migrationBuilderEE 
.EE 
CreateIndexEE (
(EE( )
nameFF 
:FF 
$strFF ,
,FF, -
tableGG 
:GG 
$strGG 
,GG 
columnHH 
:HH 
$strHH %
)HH% &
;HH& '
}II 	
	protectedKK 
overrideKK 
voidKK 
DownKK  $
(KK$ %
MigrationBuilderKK% 5
migrationBuilderKK6 F
)KKF G
{LL 	
migrationBuilderMM 
.MM 
	DropTableMM &
(MM& '
nameNN 
:NN 
$strNN 
)NN 
;NN 
migrationBuilderPP 
.PP 
	DropTablePP &
(PP& '
nameQQ 
:QQ 
$strQQ #
)QQ# $
;QQ$ %
migrationBuilderSS 
.SS 
	DropTableSS &
(SS& '
nameTT 
:TT 
$strTT 
)TT 
;TT 
}UU 	
}VV 
}WW ¤

KD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\Program.cs
	namespace

 	
IPS_Backend


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} è
KD:\S3.2\IPS\Project\IPS-Semester3\Connection Backend\IPS-Backend\Startup.cs
	namespace 	
IPS_Backend
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddCors 
( 
options $
=>% '
{ 
options   
.   
AddDefaultPolicy   (
(  ( )
builder  ) 0
=>  1 3
{!! 
builder"" 
."" 
WithOrigins"" '
(""' (
$str""( ?
)""? @
.## 
AllowAnyHeader## '
(##' (
)##( )
.$$ 
AllowAnyMethod$$ '
($$' (
)$$( )
.%% 
AllowCredentials%% )
(%%) *
)%%* +
;%%+ ,
}&& 
)&& 
;&& 
}'' 
)'' 
;'' 
services(( 
.(( 
AddControllers(( #
(((# $
)(($ %
;((% &
services)) 
.)) 
AddSwaggerGen)) "
())" #
c))# $
=>))% '
{** 
c++ 
.++ 

SwaggerDoc++ 
(++ 
$str++ !
,++! "
new++# &
OpenApiInfo++' 2
{++3 4
Title++5 :
=++; <
$str++= J
,++J K
Version++L S
=++T U
$str++V Z
}++[ \
)++\ ]
;++] ^
},, 
),, 
;,, 
}.. 	
public11 
void11 
	Configure11 
(11 
IApplicationBuilder11 1
app112 5
,115 6
IWebHostEnvironment117 J
env11K N
)11N O
{22 	
app33 
.33 
UseHttpsRedirection33 #
(33# $
)33$ %
;33% &
app55 
.55 
UseCors55 
(55 
)55 
;55 
if77 
(77 
env77 
.77 
IsDevelopment77 !
(77! "
)77" #
)77# $
{88 
app99 
.99 %
UseDeveloperExceptionPage99 -
(99- .
)99. /
;99/ 0
app:: 
.:: 

UseSwagger:: 
(:: 
)::  
;::  !
app;; 
.;; 
UseSwaggerUI;;  
(;;  !
c;;! "
=>;;# %
c;;& '
.;;' (
SwaggerEndpoint;;( 7
(;;7 8
$str;;8 R
,;;R S
$str;;T d
);;d e
);;e f
;;;f g
}<< 
app?? 
.?? 

UseRouting?? 
(?? 
)?? 
;?? 
appAA 
.AA 
UseAuthorizationAA  
(AA  !
)AA! "
;AA" #
appCC 
.CC 
UseEndpointsCC 
(CC 
	endpointsCC &
=>CC' )
{DD 
	endpointsEE 
.EE 
MapControllersEE (
(EE( )
)EE) *
;EE* +
}FF 
)FF 
;FF 
}GG 	
}HH 
}II 